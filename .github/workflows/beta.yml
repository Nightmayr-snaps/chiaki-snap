name: Build-Snap-Beta

on:
  schedule:
    - cron: '0 */5 * * *'
    - cron: '15 13 * * *'
  push:
    branches: [ master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[ci-skip]')"
    steps:
    - uses: actions/checkout@v2
      with:
        token: ${{ secrets.PAT }}
    - name: Set up environment
      run: |
        sudo apt install jq -y
        sudo apt install moreutils -y
    - name: Check latest version
      run: |
        #!/bin/bash

        git clone https://git.sr.ht/~thestr4ng3r/chiaki

        # check latest released tagged version
        LATEST_VERSION="$(cd chiaki && git tag | tail -n1 | sed 's/^v//')"
        CURRENT_VERSION_SNAP="$(snap info chiaki | grep beta | head -n 2 | tail -n 1 | awk -F ' ' '{print $2}')"

        # compare versions
        if [ $CURRENT_VERSION_SNAP != $LATEST_VERSION ]; then
            echo "versions don't match, github: $LATEST_VERSION snap: $CURRENT_VERSION_SNAP"
            echo "BUILD=true" >> $GITHUB_ENV
            echo "LATEST_VERSION=$LATEST_VERSION" >> $GITHUB_ENV
            echo "CURRENT_VERSION_SNAP=$CURRENT_VERSION_SNAP" >> $GITHUB_ENV
        else
            echo "versions match, github: $LATEST_VERSION snap: $CURRENT_VERSION_SNAP"
            echo "BUILD=false" >> $GITHUB_ENV
        fi
      id: version-check
    - name: Already latest version - cancelling
      if: env.BUILD == 'false'
      uses: andymckay/cancel-action@0.2
    - uses: snapcore/action-build@v1
      id: snapcraft
    - uses: actions/upload-artifact@v2
      with:
        name: snap
        path: ${{ steps.snapcraft.outputs.snap }}
    - name: Install snap test dependencies
      run: |
        sudo apt install -y xorg openbox libxcb-xinerama0 xvfb xauth
        export DISPLAY=:99.0
        xhost +
    - name: Testing snap
      run: |
        sudo snap install --dangerous ${{ steps.snapcraft.outputs.snap }}
        xvfb-run snap run chiaki --help
    - uses: snapcore/action-publish@v1
      with:
        store_login: ${{ secrets.STORE_LOGIN }}
        snap: ${{ steps.snapcraft.outputs.snap }}
        release: beta
    - name: updating versions.json
      run: |
        cat versions.json | jq '.beta = "${{ env.LATEST_VERSION }}"' | sponge versions.json
    - name: Committing updated versions.json
      run: |
        git config --global user.name 'Nightmayr'
        git config --global user.email 'umayr23@gmail.com'
        git commit -am "Updating version [ci-skip]"
        git push origin master
